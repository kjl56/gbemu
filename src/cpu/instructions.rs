#[derive(Debug)]
pub enum ArithmeticTarget {
  A, HL, SP
}
#[derive(Debug)]
pub enum ArithmeticSource {
  A, B, C, D, E, H, L, D8, BC, DE, HL, SP
}
#[derive(Debug)]
pub enum RotateTarget {
  A, B, C, D, E, H, L, BC, DE, HL
}
#[derive(Debug)]
pub enum StackTarget {
  BC, DE, HL, AF
}
#[derive(Debug)]
pub enum IncDecTarget {
  A, B, C, D, E, H, L, BC, DE, HL, SP
}
#[derive(Debug)]
pub enum LoadByteTarget {
  A, B, C, D, E, H, L, D8, D16, BC, DE, HL, HLI, HLD, SP, AddrPC
}
#[derive(Debug)]
pub enum LoadByteSource {
  A, B, C, D, E, H, L, D8, D16, BC, DE, HL, HLI, HLD, SP, SP8, AddrPC
}
#[derive(Debug)]
pub enum LoadType {
  Byte(LoadByteTarget, LoadByteSource),
}
#[derive(Debug)]
pub enum JumpTest {
  NotZero,
  Zero,
  NotCarry,
  Carry,
  Always
}
#[derive(Debug)]
pub enum JumpTarget {
  D16, HL, Addr00, Addr08, Addr10, Addr18, Addr20, Addr28, Addr30, Addr38
}
#[derive(Debug)]
pub enum TestBit {
  Zero, One, Two, Three, Four, Five, Six, Seven
}
#[derive(Debug)]
pub enum TestTarget {
  A, B, C, D, E, H, L, HL
}

//CPU Register Instructions
#[derive(Debug)]
pub enum Instruction {
  ADD(ArithmeticTarget, ArithmeticSource),
  ADC(ArithmeticTarget, ArithmeticSource),
  SUB(ArithmeticTarget, ArithmeticSource),
  SBC(ArithmeticTarget, ArithmeticSource),
  AND(ArithmeticTarget, ArithmeticSource),
  XOR(ArithmeticTarget, ArithmeticSource),
  OR(ArithmeticTarget, ArithmeticSource),
  CP(ArithmeticTarget, ArithmeticSource),
  
  JP(JumpTest, JumpTarget),
  JR(JumpTest, JumpTarget),

  LD(LoadType),
  LDH(LoadType),

  PUSH(StackTarget),
  POP(StackTarget),

  INC(IncDecTarget),
  DEC(IncDecTarget),

  RL(RotateTarget),
  RLA(),
  RLC(RotateTarget),
  RLCA(),
  RR(RotateTarget),
  RRA(),
  RRC(RotateTarget),
  RRCA(),
  SLA(RotateTarget),
  SRA(RotateTarget),
  SRL(RotateTarget),
  SWAP(RotateTarget),

  DAA(),

  SCF(),

  CPL(),
  CCF(),

  BIT(TestBit, TestTarget),
  RES(TestBit, TestTarget),
  SET(TestBit, TestTarget),

  CALL(JumpTest, JumpTarget),
  RET(JumpTest),
  RST(JumpTarget),
  RETI(),

  DI(),
  EI(),

  NOP(),
  STOP(),
  HALT(),
}

impl Instruction {
  pub fn from_byte(byte: u8, prefixed:bool) -> Option<Instruction> {
    if prefixed {
      Instruction::from_byte_prefixed(byte)
    } else {
      Instruction::from_byte_not_prefixed(byte)
    }
  }

  fn from_byte_prefixed(byte: u8) -> Option<Instruction> {
    match byte {
      0x00 => Some(Instruction::RLC(RotateTarget::B)),
      0x01 => Some(Instruction::RLC(RotateTarget::C)),
      0x02 => Some(Instruction::RLC(RotateTarget::D)),
      0x03 => Some(Instruction::RLC(RotateTarget::E)),
      0x04 => Some(Instruction::RLC(RotateTarget::H)),
      0x05 => Some(Instruction::RLC(RotateTarget::L)),
      0x06 => Some(Instruction::RLC(RotateTarget::HL)),
      0x07 => Some(Instruction::RLC(RotateTarget::A)),
      0x08 => Some(Instruction::RRC(RotateTarget::B)),
      0x09 => Some(Instruction::RRC(RotateTarget::C)),
      0x0a => Some(Instruction::RRC(RotateTarget::D)),
      0x0b => Some(Instruction::RRC(RotateTarget::E)),
      0x0c => Some(Instruction::RRC(RotateTarget::H)),
      0x0d => Some(Instruction::RRC(RotateTarget::L)),
      0x0e => Some(Instruction::RRC(RotateTarget::HL)),
      0x0f => Some(Instruction::RRC(RotateTarget::A)),
      0x10 => Some(Instruction::RL(RotateTarget::B)),
      0x11 => Some(Instruction::RL(RotateTarget::C)),
      0x12 => Some(Instruction::RL(RotateTarget::D)),
      0x13 => Some(Instruction::RL(RotateTarget::E)),
      0x14 => Some(Instruction::RL(RotateTarget::H)),
      0x15 => Some(Instruction::RL(RotateTarget::L)),
      0x16 => Some(Instruction::RL(RotateTarget::HL)),
      0x17 => Some(Instruction::RL(RotateTarget::A)),
      0x18 => Some(Instruction::RR(RotateTarget::B)),
      0x19 => Some(Instruction::RR(RotateTarget::C)),
      0x1a => Some(Instruction::RR(RotateTarget::D)),
      0x1b => Some(Instruction::RR(RotateTarget::E)),
      0x1c => Some(Instruction::RR(RotateTarget::H)),
      0x1d => Some(Instruction::RR(RotateTarget::L)),
      0x1e => Some(Instruction::RR(RotateTarget::HL)),
      0x1f => Some(Instruction::RR(RotateTarget::A)),
      0x20 => Some(Instruction::SLA(RotateTarget::B)),
      0x21 => Some(Instruction::SLA(RotateTarget::C)),
      0x22 => Some(Instruction::SLA(RotateTarget::D)),
      0x23 => Some(Instruction::SLA(RotateTarget::E)),
      0x24 => Some(Instruction::SLA(RotateTarget::H)),
      0x25 => Some(Instruction::SLA(RotateTarget::L)),
      0x26 => Some(Instruction::SLA(RotateTarget::HL)),
      0x27 => Some(Instruction::SLA(RotateTarget::A)),
      0x28 => Some(Instruction::SRA(RotateTarget::B)),
      0x29 => Some(Instruction::SRA(RotateTarget::C)),
      0x2a => Some(Instruction::SRA(RotateTarget::D)),
      0x2b => Some(Instruction::SRA(RotateTarget::E)),
      0x2c => Some(Instruction::SRA(RotateTarget::H)),
      0x2d => Some(Instruction::SRA(RotateTarget::L)),
      0x2e => Some(Instruction::SRA(RotateTarget::HL)),
      0x2f => Some(Instruction::SRA(RotateTarget::A)),
      0x30 => Some(Instruction::SWAP(RotateTarget::B)),
      0x31 => Some(Instruction::SWAP(RotateTarget::C)),
      0x32 => Some(Instruction::SWAP(RotateTarget::D)),
      0x33 => Some(Instruction::SWAP(RotateTarget::E)),
      0x34 => Some(Instruction::SWAP(RotateTarget::H)),
      0x35 => Some(Instruction::SWAP(RotateTarget::L)),
      0x36 => Some(Instruction::SWAP(RotateTarget::HL)),
      0x37 => Some(Instruction::SWAP(RotateTarget::A)),
      0x38 => Some(Instruction::SRL(RotateTarget::B)),
      0x39 => Some(Instruction::SRL(RotateTarget::C)),
      0x3a => Some(Instruction::SRL(RotateTarget::D)),
      0x3b => Some(Instruction::SRL(RotateTarget::E)),
      0x3c => Some(Instruction::SRL(RotateTarget::H)),
      0x3d => Some(Instruction::SRL(RotateTarget::L)),
      0x3e => Some(Instruction::SRL(RotateTarget::HL)),
      0x3f => Some(Instruction::SRL(RotateTarget::A)),
      0x40 => Some(Instruction::BIT(TestBit::Zero, TestTarget::B)),
      0x41 => Some(Instruction::BIT(TestBit::Zero, TestTarget::C)),
      0x42 => Some(Instruction::BIT(TestBit::Zero, TestTarget::D)),
      0x43 => Some(Instruction::BIT(TestBit::Zero, TestTarget::E)),
      0x44 => Some(Instruction::BIT(TestBit::Zero, TestTarget::H)),
      0x45 => Some(Instruction::BIT(TestBit::Zero, TestTarget::L)),
      0x46 => Some(Instruction::BIT(TestBit::Zero, TestTarget::HL)),
      0x47 => Some(Instruction::BIT(TestBit::Zero, TestTarget::A)),
      0x48 => Some(Instruction::BIT(TestBit::One, TestTarget::B)),
      0x49 => Some(Instruction::BIT(TestBit::One, TestTarget::C)),
      0x4a => Some(Instruction::BIT(TestBit::One, TestTarget::D)),
      0x4b => Some(Instruction::BIT(TestBit::One, TestTarget::E)),
      0x4c => Some(Instruction::BIT(TestBit::One, TestTarget::H)),
      0x4d => Some(Instruction::BIT(TestBit::One, TestTarget::L)),
      0x4e => Some(Instruction::BIT(TestBit::One, TestTarget::HL)),
      0x4f => Some(Instruction::BIT(TestBit::One, TestTarget::A)),
      0x50 => Some(Instruction::BIT(TestBit::Two, TestTarget::B)),
      0x51 => Some(Instruction::BIT(TestBit::Two, TestTarget::C)),
      0x52 => Some(Instruction::BIT(TestBit::Two, TestTarget::D)),
      0x53 => Some(Instruction::BIT(TestBit::Two, TestTarget::E)),
      0x54 => Some(Instruction::BIT(TestBit::Two, TestTarget::H)),
      0x55 => Some(Instruction::BIT(TestBit::Two, TestTarget::L)),
      0x56 => Some(Instruction::BIT(TestBit::Two, TestTarget::HL)),
      0x57 => Some(Instruction::BIT(TestBit::Two, TestTarget::A)),
      0x58 => Some(Instruction::BIT(TestBit::Three, TestTarget::B)),
      0x59 => Some(Instruction::BIT(TestBit::Three, TestTarget::C)),
      0x5a => Some(Instruction::BIT(TestBit::Three, TestTarget::D)),
      0x5b => Some(Instruction::BIT(TestBit::Three, TestTarget::E)),
      0x5c => Some(Instruction::BIT(TestBit::Three, TestTarget::H)),
      0x5d => Some(Instruction::BIT(TestBit::Three, TestTarget::L)),
      0x5e => Some(Instruction::BIT(TestBit::Three, TestTarget::HL)),
      0x5f => Some(Instruction::BIT(TestBit::Three, TestTarget::A)),
      0x60 => Some(Instruction::BIT(TestBit::Four, TestTarget::B)),
      0x61 => Some(Instruction::BIT(TestBit::Four, TestTarget::C)),
      0x62 => Some(Instruction::BIT(TestBit::Four, TestTarget::D)),
      0x63 => Some(Instruction::BIT(TestBit::Four, TestTarget::E)),
      0x64 => Some(Instruction::BIT(TestBit::Four, TestTarget::H)),
      0x65 => Some(Instruction::BIT(TestBit::Four, TestTarget::L)),
      0x66 => Some(Instruction::BIT(TestBit::Four, TestTarget::HL)),
      0x67 => Some(Instruction::BIT(TestBit::Four, TestTarget::A)),
      0x68 => Some(Instruction::BIT(TestBit::Five, TestTarget::B)),
      0x69 => Some(Instruction::BIT(TestBit::Five, TestTarget::C)),
      0x6a => Some(Instruction::BIT(TestBit::Five, TestTarget::D)),
      0x6b => Some(Instruction::BIT(TestBit::Five, TestTarget::E)),
      0x6c => Some(Instruction::BIT(TestBit::Five, TestTarget::H)),
      0x6d => Some(Instruction::BIT(TestBit::Five, TestTarget::L)),
      0x6e => Some(Instruction::BIT(TestBit::Five, TestTarget::HL)),
      0x6f => Some(Instruction::BIT(TestBit::Five, TestTarget::A)),
      0x70 => Some(Instruction::BIT(TestBit::Six, TestTarget::B)),
      0x71 => Some(Instruction::BIT(TestBit::Six, TestTarget::C)),
      0x72 => Some(Instruction::BIT(TestBit::Six, TestTarget::D)),
      0x73 => Some(Instruction::BIT(TestBit::Six, TestTarget::E)),
      0x74 => Some(Instruction::BIT(TestBit::Six, TestTarget::H)),
      0x75 => Some(Instruction::BIT(TestBit::Six, TestTarget::L)),
      0x76 => Some(Instruction::BIT(TestBit::Six, TestTarget::HL)),
      0x77 => Some(Instruction::BIT(TestBit::Six, TestTarget::A)),
      0x78 => Some(Instruction::BIT(TestBit::Seven, TestTarget::B)),
      0x79 => Some(Instruction::BIT(TestBit::Seven, TestTarget::C)),
      0x7a => Some(Instruction::BIT(TestBit::Seven, TestTarget::D)),
      0x7b => Some(Instruction::BIT(TestBit::Seven, TestTarget::E)),
      0x7c => Some(Instruction::BIT(TestBit::Seven, TestTarget::H)),
      0x7d => Some(Instruction::BIT(TestBit::Seven, TestTarget::L)),
      0x7e => Some(Instruction::BIT(TestBit::Seven, TestTarget::HL)),
      0x7f => Some(Instruction::BIT(TestBit::Seven, TestTarget::A)),
      0x80 => Some(Instruction::RES(TestBit::Zero, TestTarget::B)),
      0x81 => Some(Instruction::RES(TestBit::Zero, TestTarget::C)),
      0x82 => Some(Instruction::RES(TestBit::Zero, TestTarget::D)),
      0x83 => Some(Instruction::RES(TestBit::Zero, TestTarget::E)),
      0x84 => Some(Instruction::RES(TestBit::Zero, TestTarget::H)),
      0x85 => Some(Instruction::RES(TestBit::Zero, TestTarget::L)),
      0x86 => Some(Instruction::RES(TestBit::Zero, TestTarget::HL)),
      0x87 => Some(Instruction::RES(TestBit::Zero, TestTarget::A)),
      0x88 => Some(Instruction::RES(TestBit::One, TestTarget::B)),
      0x89 => Some(Instruction::RES(TestBit::One, TestTarget::C)),
      0x8a => Some(Instruction::RES(TestBit::One, TestTarget::D)),
      0x8b => Some(Instruction::RES(TestBit::One, TestTarget::E)),
      0x8c => Some(Instruction::RES(TestBit::One, TestTarget::H)),
      0x8d => Some(Instruction::RES(TestBit::One, TestTarget::L)),
      0x8e => Some(Instruction::RES(TestBit::One, TestTarget::HL)),
      0x8f => Some(Instruction::RES(TestBit::One, TestTarget::A)),
      0x90 => Some(Instruction::RES(TestBit::Two, TestTarget::B)),
      0x91 => Some(Instruction::RES(TestBit::Two, TestTarget::C)),
      0x92 => Some(Instruction::RES(TestBit::Two, TestTarget::D)),
      0x93 => Some(Instruction::RES(TestBit::Two, TestTarget::E)),
      0x94 => Some(Instruction::RES(TestBit::Two, TestTarget::H)),
      0x95 => Some(Instruction::RES(TestBit::Two, TestTarget::L)),
      0x96 => Some(Instruction::RES(TestBit::Two, TestTarget::HL)),
      0x97 => Some(Instruction::RES(TestBit::Two, TestTarget::A)),
      0x98 => Some(Instruction::RES(TestBit::Three, TestTarget::B)),
      0x99 => Some(Instruction::RES(TestBit::Three, TestTarget::C)),
      0x9a => Some(Instruction::RES(TestBit::Three, TestTarget::D)),
      0x9b => Some(Instruction::RES(TestBit::Three, TestTarget::E)),
      0x9c => Some(Instruction::RES(TestBit::Three, TestTarget::H)),
      0x9d => Some(Instruction::RES(TestBit::Three, TestTarget::L)),
      0x9e => Some(Instruction::RES(TestBit::Three, TestTarget::HL)),
      0x9f => Some(Instruction::RES(TestBit::Three, TestTarget::A)),
      0xa0 => Some(Instruction::RES(TestBit::Four, TestTarget::B)),
      0xa1 => Some(Instruction::RES(TestBit::Four, TestTarget::C)),
      0xa2 => Some(Instruction::RES(TestBit::Four, TestTarget::D)),
      0xa3 => Some(Instruction::RES(TestBit::Four, TestTarget::E)),
      0xa4 => Some(Instruction::RES(TestBit::Four, TestTarget::H)),
      0xa5 => Some(Instruction::RES(TestBit::Four, TestTarget::L)),
      0xa6 => Some(Instruction::RES(TestBit::Four, TestTarget::HL)),
      0xa7 => Some(Instruction::RES(TestBit::Four, TestTarget::A)),
      0xa8 => Some(Instruction::RES(TestBit::Five, TestTarget::B)),
      0xa9 => Some(Instruction::RES(TestBit::Five, TestTarget::C)),
      0xaa => Some(Instruction::RES(TestBit::Five, TestTarget::D)),
      0xab => Some(Instruction::RES(TestBit::Five, TestTarget::E)),
      0xac => Some(Instruction::RES(TestBit::Five, TestTarget::H)),
      0xad => Some(Instruction::RES(TestBit::Five, TestTarget::L)),
      0xae => Some(Instruction::RES(TestBit::Five, TestTarget::HL)),
      0xaf => Some(Instruction::RES(TestBit::Five, TestTarget::A)),
      0xb0 => Some(Instruction::RES(TestBit::Six, TestTarget::B)),
      0xb1 => Some(Instruction::RES(TestBit::Six, TestTarget::C)),
      0xb2 => Some(Instruction::RES(TestBit::Six, TestTarget::D)),
      0xb3 => Some(Instruction::RES(TestBit::Six, TestTarget::E)),
      0xb4 => Some(Instruction::RES(TestBit::Six, TestTarget::H)),
      0xb5 => Some(Instruction::RES(TestBit::Six, TestTarget::L)),
      0xb6 => Some(Instruction::RES(TestBit::Six, TestTarget::HL)),
      0xb7 => Some(Instruction::RES(TestBit::Six, TestTarget::A)),
      0xb8 => Some(Instruction::RES(TestBit::Seven, TestTarget::B)),
      0xb9 => Some(Instruction::RES(TestBit::Seven, TestTarget::C)),
      0xba => Some(Instruction::RES(TestBit::Seven, TestTarget::D)),
      0xbb => Some(Instruction::RES(TestBit::Seven, TestTarget::E)),
      0xbc => Some(Instruction::RES(TestBit::Seven, TestTarget::H)),
      0xbd => Some(Instruction::RES(TestBit::Seven, TestTarget::L)),
      0xbe => Some(Instruction::RES(TestBit::Seven, TestTarget::HL)),
      0xbf => Some(Instruction::RES(TestBit::Seven, TestTarget::A)),
      0xc0 => Some(Instruction::SET(TestBit::Zero, TestTarget::B)),
      0xc1 => Some(Instruction::SET(TestBit::Zero, TestTarget::C)),
      0xc2 => Some(Instruction::SET(TestBit::Zero, TestTarget::D)),
      0xc3 => Some(Instruction::SET(TestBit::Zero, TestTarget::E)),
      0xc4 => Some(Instruction::SET(TestBit::Zero, TestTarget::H)),
      0xc5 => Some(Instruction::SET(TestBit::Zero, TestTarget::L)),
      0xc6 => Some(Instruction::SET(TestBit::Zero, TestTarget::HL)),
      0xc7 => Some(Instruction::SET(TestBit::Zero, TestTarget::A)),
      0xc8 => Some(Instruction::SET(TestBit::One, TestTarget::B)),
      0xc9 => Some(Instruction::SET(TestBit::One, TestTarget::C)),
      0xca => Some(Instruction::SET(TestBit::One, TestTarget::D)),
      0xcb => Some(Instruction::SET(TestBit::One, TestTarget::E)),
      0xcc => Some(Instruction::SET(TestBit::One, TestTarget::H)),
      0xcd => Some(Instruction::SET(TestBit::One, TestTarget::L)),
      0xce => Some(Instruction::SET(TestBit::One, TestTarget::HL)),
      0xcf => Some(Instruction::SET(TestBit::One, TestTarget::A)),
      0xd0 => Some(Instruction::SET(TestBit::Two, TestTarget::B)),
      0xd1 => Some(Instruction::SET(TestBit::Two, TestTarget::C)),
      0xd2 => Some(Instruction::SET(TestBit::Two, TestTarget::D)),
      0xd3 => Some(Instruction::SET(TestBit::Two, TestTarget::E)),
      0xd4 => Some(Instruction::SET(TestBit::Two, TestTarget::H)),
      0xd5 => Some(Instruction::SET(TestBit::Two, TestTarget::L)),
      0xd6 => Some(Instruction::SET(TestBit::Two, TestTarget::HL)),
      0xd7 => Some(Instruction::SET(TestBit::Two, TestTarget::A)),
      0xd8 => Some(Instruction::SET(TestBit::Three, TestTarget::B)),
      0xd9 => Some(Instruction::SET(TestBit::Three, TestTarget::C)),
      0xda => Some(Instruction::SET(TestBit::Three, TestTarget::D)),
      0xdb => Some(Instruction::SET(TestBit::Three, TestTarget::E)),
      0xdc => Some(Instruction::SET(TestBit::Three, TestTarget::H)),
      0xdd => Some(Instruction::SET(TestBit::Three, TestTarget::L)),
      0xde => Some(Instruction::SET(TestBit::Three, TestTarget::HL)),
      0xdf => Some(Instruction::SET(TestBit::Three, TestTarget::A)),
      0xe0 => Some(Instruction::SET(TestBit::Four, TestTarget::B)),
      0xe1 => Some(Instruction::SET(TestBit::Four, TestTarget::C)),
      0xe2 => Some(Instruction::SET(TestBit::Four, TestTarget::D)),
      0xe3 => Some(Instruction::SET(TestBit::Four, TestTarget::E)),
      0xe4 => Some(Instruction::SET(TestBit::Four, TestTarget::H)),
      0xe5 => Some(Instruction::SET(TestBit::Four, TestTarget::L)),
      0xe6 => Some(Instruction::SET(TestBit::Four, TestTarget::HL)),
      0xe7 => Some(Instruction::SET(TestBit::Four, TestTarget::A)),
      0xe8 => Some(Instruction::SET(TestBit::Five, TestTarget::B)),
      0xe9 => Some(Instruction::SET(TestBit::Five, TestTarget::C)),
      0xea => Some(Instruction::SET(TestBit::Five, TestTarget::D)),
      0xeb => Some(Instruction::SET(TestBit::Five, TestTarget::E)),
      0xec => Some(Instruction::SET(TestBit::Five, TestTarget::H)),
      0xed => Some(Instruction::SET(TestBit::Five, TestTarget::L)),
      0xee => Some(Instruction::SET(TestBit::Five, TestTarget::HL)),
      0xef => Some(Instruction::SET(TestBit::Five, TestTarget::A)),
      0xf0 => Some(Instruction::SET(TestBit::Six, TestTarget::B)),
      0xf1 => Some(Instruction::SET(TestBit::Six, TestTarget::C)),
      0xf2 => Some(Instruction::SET(TestBit::Six, TestTarget::D)),
      0xf3 => Some(Instruction::SET(TestBit::Six, TestTarget::E)),
      0xf4 => Some(Instruction::SET(TestBit::Six, TestTarget::H)),
      0xf5 => Some(Instruction::SET(TestBit::Six, TestTarget::L)),
      0xf6 => Some(Instruction::SET(TestBit::Six, TestTarget::HL)),
      0xf7 => Some(Instruction::SET(TestBit::Six, TestTarget::A)),
      0xf8 => Some(Instruction::SET(TestBit::Seven, TestTarget::B)),
      0xf9 => Some(Instruction::SET(TestBit::Seven, TestTarget::C)),
      0xfa => Some(Instruction::SET(TestBit::Seven, TestTarget::D)),
      0xfb => Some(Instruction::SET(TestBit::Seven, TestTarget::E)),
      0xfc => Some(Instruction::SET(TestBit::Seven, TestTarget::H)),
      0xfd => Some(Instruction::SET(TestBit::Seven, TestTarget::L)),
      0xfe => Some(Instruction::SET(TestBit::Seven, TestTarget::HL)),
      0xff => Some(Instruction::SET(TestBit::Seven, TestTarget::A)),
      _ => /*todo: add mapping for rest of instructions*/ None
    }
  }

  fn from_byte_not_prefixed(byte: u8) -> Option<Instruction> {
    match byte {
      0x00 => Some(Instruction::NOP()),
      0x01 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::BC, LoadByteSource::D16))),
      0x02 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::BC, LoadByteSource::A))),
      0x03 => Some(Instruction::INC(IncDecTarget::BC)),
      0x04 => Some(Instruction::INC(IncDecTarget::B)),
      0x05 => Some(Instruction::DEC(IncDecTarget::B)),
      0x06 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::B, LoadByteSource::D8))),
      0x07 => Some(Instruction::RLCA()),
      0x08 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::D16, LoadByteSource::SP))),
      0x09 => Some(Instruction::ADD(ArithmeticTarget::HL, ArithmeticSource::BC)),
      0x0A => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::BC))),
      0x0B => Some(Instruction::DEC(IncDecTarget::BC)),
      0x0c => Some(Instruction::INC(IncDecTarget::C)),
      0x0d => Some(Instruction::DEC(IncDecTarget::C)),
      0x0e => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::C, LoadByteSource::D8))),
      0x0f => Some(Instruction::RRCA()),
      0x10 => Some(Instruction::STOP()),
      0x11 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::DE, LoadByteSource::D16))),
      0x12 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::DE, LoadByteSource::A))),
      0x13 => Some(Instruction::INC(IncDecTarget::DE)),
      0x14 => Some(Instruction::INC(IncDecTarget::D)),
      0x15 => Some(Instruction::DEC(IncDecTarget::D)),
      0x16 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::D, LoadByteSource::D8))),
      0x17 => Some(Instruction::RLA()),
      0x18 => Some(Instruction::JR(JumpTest::Always, JumpTarget::D16)),
      0x19 => Some(Instruction::ADD(ArithmeticTarget::HL, ArithmeticSource::DE)),
      0x1a => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::DE))),
      0x1b => Some(Instruction::DEC(IncDecTarget::DE)),
      0x1c => Some(Instruction::INC(IncDecTarget::E)),
      0x1d => Some(Instruction::DEC(IncDecTarget::E)),
      0x1e => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::E, LoadByteSource::D8))),
      0x1f => Some(Instruction::RRA()),
      0x20 => Some(Instruction::JR(JumpTest::NotZero, JumpTarget::D16)),
      0x21 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::HL, LoadByteSource::D16))),
      0x22 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::HLI, LoadByteSource::A))),
      0x23 => Some(Instruction::INC(IncDecTarget::HL)),
      0x24 => Some(Instruction::INC(IncDecTarget::H)),
      0x25 => Some(Instruction::DEC(IncDecTarget::H)),
      0x26 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::H, LoadByteSource::D8))),
      0x27 => Some(Instruction::DAA()),
      0x28 => Some(Instruction::JR(JumpTest::Zero, JumpTarget::D16)),
      0x29 => Some(Instruction::ADD(ArithmeticTarget::HL, ArithmeticSource::HL)),
      0x2a => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::HLI))),
      0x2b => Some(Instruction::DEC(IncDecTarget::HL)),
      0x2c => Some(Instruction::INC(IncDecTarget::L)),
      0x2d => Some(Instruction::DEC(IncDecTarget::L)),
      0x2e => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::L, LoadByteSource::D8))),
      0x2f => Some(Instruction::CPL()),
      0x30 => Some(Instruction::JR(JumpTest::NotCarry, JumpTarget::D16)),
      0x31 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::SP, LoadByteSource::D16))),
      0x32 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::HLD, LoadByteSource::A))),
      0x33 => Some(Instruction::INC(IncDecTarget::SP)),
      0x34 => Some(Instruction::INC(IncDecTarget::HL)),
      0x35 => Some(Instruction::DEC(IncDecTarget::HL)),
      0x36 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::HL, LoadByteSource::D8))),
      0x37 => Some(Instruction::SCF()),
      0x38 => Some(Instruction::JR(JumpTest::Carry, JumpTarget::D16)),
      0x39 => Some(Instruction::ADD(ArithmeticTarget::HL, ArithmeticSource::SP)),
      0x3a => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::HLD))),
      0x3b => Some(Instruction::DEC(IncDecTarget::SP)),
      0x3c => Some(Instruction::INC(IncDecTarget::A)),
      0x3d => Some(Instruction::DEC(IncDecTarget::A)),
      0x3e => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::D8))),
      0x3f => Some(Instruction::CCF()),
      0x40 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::B, LoadByteSource::B))),
      0x41 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::B, LoadByteSource::C))),
      0x42 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::B, LoadByteSource::D))),
      0x43 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::B, LoadByteSource::E))),
      0x44 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::B, LoadByteSource::H))),
      0x45 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::B, LoadByteSource::L))),
      0x46 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::B, LoadByteSource::HL))),
      0x47 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::B, LoadByteSource::A))),
      0x48 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::C, LoadByteSource::B))),
      0x49 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::C, LoadByteSource::C))),
      0x4a => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::C, LoadByteSource::D))),
      0x4b => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::C, LoadByteSource::E))),
      0x4c => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::C, LoadByteSource::H))),
      0x4d => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::C, LoadByteSource::L))),
      0x4e => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::C, LoadByteSource::HL))),
      0x4f => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::C, LoadByteSource::A))),
      0x50 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::D, LoadByteSource::B))),
      0x51 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::D, LoadByteSource::C))),
      0x52 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::D, LoadByteSource::D))),
      0x53 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::D, LoadByteSource::E))),
      0x54 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::D, LoadByteSource::H))),
      0x55 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::D, LoadByteSource::L))),
      0x56 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::D, LoadByteSource::HL))),
      0x57 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::D, LoadByteSource::A))),
      0x58 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::E, LoadByteSource::B))),
      0x59 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::E, LoadByteSource::C))),
      0x5a => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::E, LoadByteSource::D))),
      0x5b => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::E, LoadByteSource::E))),
      0x5c => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::E, LoadByteSource::H))),
      0x5d => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::E, LoadByteSource::L))),
      0x5e => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::E, LoadByteSource::HL))),
      0x5f => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::E, LoadByteSource::A))),
      0x60 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::H, LoadByteSource::B))),
      0x61 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::H, LoadByteSource::C))),
      0x62 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::H, LoadByteSource::D))),
      0x63 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::H, LoadByteSource::E))),
      0x64 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::H, LoadByteSource::H))),
      0x65 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::H, LoadByteSource::L))),
      0x66 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::H, LoadByteSource::HL))),
      0x67 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::H, LoadByteSource::A))),
      0x68 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::L, LoadByteSource::B))),
      0x69 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::L, LoadByteSource::C))),
      0x6a => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::L, LoadByteSource::D))),
      0x6b => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::L, LoadByteSource::E))),
      0x6c => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::L, LoadByteSource::H))),
      0x6d => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::L, LoadByteSource::L))),
      0x6e => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::L, LoadByteSource::HL))),
      0x6f => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::L, LoadByteSource::A))),
      0x70 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::HL, LoadByteSource::B))),
      0x71 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::HL, LoadByteSource::C))),
      0x72 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::HL, LoadByteSource::D))),
      0x73 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::HL, LoadByteSource::E))),
      0x74 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::HL, LoadByteSource::H))),
      0x75 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::HL, LoadByteSource::L))),
      0x76 => Some(Instruction::HALT()),
      0x77 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::HL, LoadByteSource::A))),
      0x78 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::B))),
      0x79 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::C))),
      0x7a => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::D))),
      0x7b => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::E))),
      0x7c => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::H))),
      0x7d => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::L))),
      0x7e => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::HL))),
      0x7f => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::A))),
      0x80 => Some(Instruction::ADD(ArithmeticTarget::A, ArithmeticSource::B)),
      0x81 => Some(Instruction::ADD(ArithmeticTarget::A, ArithmeticSource::C)),
      0x82 => Some(Instruction::ADD(ArithmeticTarget::A, ArithmeticSource::D)),
      0x83 => Some(Instruction::ADD(ArithmeticTarget::A, ArithmeticSource::E)),
      0x84 => Some(Instruction::ADD(ArithmeticTarget::A, ArithmeticSource::H)),
      0x85 => Some(Instruction::ADD(ArithmeticTarget::A, ArithmeticSource::L)),
      0x86 => Some(Instruction::ADD(ArithmeticTarget::A, ArithmeticSource::HL)),
      0x87 => Some(Instruction::ADD(ArithmeticTarget::A, ArithmeticSource::A)),
      0x88 => Some(Instruction::ADC(ArithmeticTarget::A, ArithmeticSource::B)),
      0x89 => Some(Instruction::ADC(ArithmeticTarget::A, ArithmeticSource::C)),
      0x8a => Some(Instruction::ADC(ArithmeticTarget::A, ArithmeticSource::D)),
      0x8b => Some(Instruction::ADC(ArithmeticTarget::A, ArithmeticSource::E)),
      0x8c => Some(Instruction::ADC(ArithmeticTarget::A, ArithmeticSource::H)),
      0x8d => Some(Instruction::ADC(ArithmeticTarget::A, ArithmeticSource::L)),
      0x8e => Some(Instruction::ADC(ArithmeticTarget::A, ArithmeticSource::HL)),
      0x8f => Some(Instruction::ADC(ArithmeticTarget::A, ArithmeticSource::A)),
      0x90 => Some(Instruction::SUB(ArithmeticTarget::A, ArithmeticSource::B)),
      0x91 => Some(Instruction::SUB(ArithmeticTarget::A, ArithmeticSource::C)),
      0x92 => Some(Instruction::SUB(ArithmeticTarget::A, ArithmeticSource::D)),
      0x93 => Some(Instruction::SUB(ArithmeticTarget::A, ArithmeticSource::E)),
      0x94 => Some(Instruction::SUB(ArithmeticTarget::A, ArithmeticSource::H)),
      0x95 => Some(Instruction::SUB(ArithmeticTarget::A, ArithmeticSource::L)),
      0x96 => Some(Instruction::SUB(ArithmeticTarget::A, ArithmeticSource::HL)),
      0x97 => Some(Instruction::SUB(ArithmeticTarget::A, ArithmeticSource::A)),
      0x98 => Some(Instruction::SBC(ArithmeticTarget::A, ArithmeticSource::B)),
      0x99 => Some(Instruction::SBC(ArithmeticTarget::A, ArithmeticSource::C)),
      0x9a => Some(Instruction::SBC(ArithmeticTarget::A, ArithmeticSource::D)),
      0x9b => Some(Instruction::SBC(ArithmeticTarget::A, ArithmeticSource::E)),
      0x9c => Some(Instruction::SBC(ArithmeticTarget::A, ArithmeticSource::H)),
      0x9d => Some(Instruction::SBC(ArithmeticTarget::A, ArithmeticSource::L)),
      0x9e => Some(Instruction::SBC(ArithmeticTarget::A, ArithmeticSource::HL)),
      0x9f => Some(Instruction::SBC(ArithmeticTarget::A, ArithmeticSource::A)),
      0xa0 => Some(Instruction::AND(ArithmeticTarget::A, ArithmeticSource::B)),
      0xa1 => Some(Instruction::AND(ArithmeticTarget::A, ArithmeticSource::C)),
      0xa2 => Some(Instruction::AND(ArithmeticTarget::A, ArithmeticSource::D)),
      0xa3 => Some(Instruction::AND(ArithmeticTarget::A, ArithmeticSource::E)),
      0xa4 => Some(Instruction::AND(ArithmeticTarget::A, ArithmeticSource::H)),
      0xa5 => Some(Instruction::AND(ArithmeticTarget::A, ArithmeticSource::L)),
      0xa6 => Some(Instruction::AND(ArithmeticTarget::A, ArithmeticSource::HL)),
      0xa7 => Some(Instruction::AND(ArithmeticTarget::A, ArithmeticSource::A)),
      0xa8 => Some(Instruction::XOR(ArithmeticTarget::A, ArithmeticSource::B)),
      0xa9 => Some(Instruction::XOR(ArithmeticTarget::A, ArithmeticSource::C)),
      0xaa => Some(Instruction::XOR(ArithmeticTarget::A, ArithmeticSource::D)),
      0xab => Some(Instruction::XOR(ArithmeticTarget::A, ArithmeticSource::E)),
      0xac => Some(Instruction::XOR(ArithmeticTarget::A, ArithmeticSource::H)),
      0xad => Some(Instruction::XOR(ArithmeticTarget::A, ArithmeticSource::L)),
      0xae => Some(Instruction::XOR(ArithmeticTarget::A, ArithmeticSource::HL)),
      0xaf => Some(Instruction::XOR(ArithmeticTarget::A, ArithmeticSource::A)),
      0xb0 => Some(Instruction::OR(ArithmeticTarget::A, ArithmeticSource::B)),
      0xb1 => Some(Instruction::OR(ArithmeticTarget::A, ArithmeticSource::C)),
      0xb2 => Some(Instruction::OR(ArithmeticTarget::A, ArithmeticSource::D)),
      0xb3 => Some(Instruction::OR(ArithmeticTarget::A, ArithmeticSource::E)),
      0xb4 => Some(Instruction::OR(ArithmeticTarget::A, ArithmeticSource::H)),
      0xb5 => Some(Instruction::OR(ArithmeticTarget::A, ArithmeticSource::L)),
      0xb6 => Some(Instruction::OR(ArithmeticTarget::A, ArithmeticSource::HL)),
      0xb7 => Some(Instruction::OR(ArithmeticTarget::A, ArithmeticSource::A)),
      0xb8 => Some(Instruction::CP(ArithmeticTarget::A, ArithmeticSource::B)),
      0xb9 => Some(Instruction::CP(ArithmeticTarget::A, ArithmeticSource::C)),
      0xba => Some(Instruction::CP(ArithmeticTarget::A, ArithmeticSource::D)),
      0xbb => Some(Instruction::CP(ArithmeticTarget::A, ArithmeticSource::E)),
      0xbc => Some(Instruction::CP(ArithmeticTarget::A, ArithmeticSource::H)),
      0xbd => Some(Instruction::CP(ArithmeticTarget::A, ArithmeticSource::L)),
      0xbe => Some(Instruction::CP(ArithmeticTarget::A, ArithmeticSource::HL)),
      0xbf => Some(Instruction::CP(ArithmeticTarget::A, ArithmeticSource::A)),
      0xc0 => Some(Instruction::RET(JumpTest::NotZero)),
      0xc1 => Some(Instruction::POP(StackTarget::BC)),
      0xc2 => Some(Instruction::JP(JumpTest::NotZero, JumpTarget::D16)),
      0xc3 => Some(Instruction::JP(JumpTest::Always, JumpTarget::D16)),
      0xc4 => Some(Instruction::CALL(JumpTest::NotZero, JumpTarget::D16)),
      0xc5 => Some(Instruction::PUSH(StackTarget::BC)),
      0xc6 => Some(Instruction::ADD(ArithmeticTarget::A, ArithmeticSource::D8)),
      0xc7 => Some(Instruction::RST(JumpTarget::Addr00)),
      0xc8 => Some(Instruction::RET(JumpTest::Zero)),
      0xc9 => Some(Instruction::RET(JumpTest::Always)),
      0xca => Some(Instruction::JP(JumpTest::Zero, JumpTarget::D16)),

      0xcc => Some(Instruction::CALL(JumpTest::Zero, JumpTarget::D16)),
      0xcd => Some(Instruction::CALL(JumpTest::Always, JumpTarget::D16)),
      0xce => Some(Instruction::ADC(ArithmeticTarget::A, ArithmeticSource::D8)),
      0xcf => Some(Instruction::RST(JumpTarget::Addr08)),
      0xd0 => Some(Instruction::RET(JumpTest::NotCarry)),
      0xd1 => Some(Instruction::POP(StackTarget::DE)),
      0xd2 => Some(Instruction::JP(JumpTest::NotCarry, JumpTarget::D16)),

      0xd4 => Some(Instruction::CALL(JumpTest::NotCarry, JumpTarget::D16)),
      0xd5 => Some(Instruction::PUSH(StackTarget::DE)),
      0xd6 => Some(Instruction::SUB(ArithmeticTarget::A, ArithmeticSource::D8)),
      0xd7 => Some(Instruction::RST(JumpTarget::Addr10)),
      0xd8 => Some(Instruction::RET(JumpTest::Carry)),
      0xd9 => Some(Instruction::RETI()),
      0xda => Some(Instruction::JP(JumpTest::Carry, JumpTarget::D16)),

      0xdc => Some(Instruction::CALL(JumpTest::Carry, JumpTarget::D16)),

      0xde => Some(Instruction::SBC(ArithmeticTarget::A, ArithmeticSource::D8)),
      0xdf => Some(Instruction::RST(JumpTarget::Addr18)),
      0xe0 => Some(Instruction::LDH(LoadType::Byte(LoadByteTarget::D8, LoadByteSource::A))),
      0xe1 => Some(Instruction::POP(StackTarget::HL)),
      0xe2 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::AddrPC, LoadByteSource::A))),


      0xe5 => Some(Instruction::PUSH(StackTarget::HL)),
      0xe6 => Some(Instruction::AND(ArithmeticTarget::A, ArithmeticSource::D8)),
      0xe7 => Some(Instruction::RST(JumpTarget::Addr20)),
      0xe8 => Some(Instruction::ADD(ArithmeticTarget::SP, ArithmeticSource::D8)),
      0xe9 => Some(Instruction::JP(JumpTest::Always, JumpTarget::HL)),
      0xea => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::D16, LoadByteSource::A))),



      0xee => Some(Instruction::XOR(ArithmeticTarget::A, ArithmeticSource::D8)),
      0xef => Some(Instruction::RST(JumpTarget::Addr28)),
      0xf0 => Some(Instruction::LDH(LoadType::Byte(LoadByteTarget::A, LoadByteSource::D8))),
      0xf1 => Some(Instruction::POP(StackTarget::AF)),
      0xf2 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::AddrPC))),
      0xf3 => Some(Instruction::DI()),

      0xf5 => Some(Instruction::PUSH(StackTarget::AF)),
      0xf6 => Some(Instruction::OR(ArithmeticTarget::A, ArithmeticSource::D8)),
      0xf7 => Some(Instruction::RST(JumpTarget::Addr30)),
      0xf8 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::HL, LoadByteSource::SP8))),
      0xf9 => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::SP, LoadByteSource::HL))),
      0xfa => Some(Instruction::LD(LoadType::Byte(LoadByteTarget::A, LoadByteSource::D16))),
      0xfb => Some(Instruction::EI()),


      0xfe => Some(Instruction::CP(ArithmeticTarget::A, ArithmeticSource::D8)),
      0xff => Some(Instruction::RST(JumpTarget::Addr38)),

      
      0xD3 | 0xDB | 0xDD | 0xE3 | 0xE4 | 0xEB | 0xEC | 0xED | 0xF4 | 0xFC | 0xFD => panic!("attempt to use a forbidden opcode"),
      _ => /*todo: add mapping for rest of instructions*/ None
    }
  }
}